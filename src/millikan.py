import matplotlib.pyplot as g
import numpy as np


def f(v, u):
    a = (4/3)*np.pi*9.81*886
    b = (((0.5E-3/u)+(0.5E-3/v))/(0.5E-3/v))*(0.00767/300)
    c = np.sqrt((8.2E-3/(2*101485))**2+((9*1.852E-5*(0.5E-3/v))/(2*886*9.81)))
    d = a*(c-(8.2E-3/(2*101485)))**3*b
    return d


def f_e(v):
    a = (4 / 3) * np.pi * 9.81 * 886
    b = (((0.5E-3 / 16) + (0.5E-3 / v)) / (0.5E-3 / v)) * (0.00767 / 300)
    c = np.sqrt((8.2E-3 / (2 * 101485)) ** 2 + ((9 * 1.852E-5 * (0.5E-3 / v)) / (2 * 886 * 9.81)))
    d = a * (c - (8.2E-3 / (2 * 101485))) ** 3 * b
    return d


def r(v):
    a = -8.2E-3/(2*101485)
    b = a+np.sqrt((8.2E-3/(2*101485))**2+((9*1.852E-5*(0.5E-3/v))/(2*886*9.81)))
    return b


def t_up(q):
    a = (4 / 3) * np.pi * 9.81 * 886
    b = np.sqrt((8.2E-3 / (2 * 101485)) ** 2 + ((9 * 1.852E-5 * (0.5E-3 / 16)) / (2 * 886 * 9.81))) * (0.00767 / 300)
    c = 0.5E-3 / (((q * (0.5E-3 / 16)) / (a * (b - (8.2E-3 / (2 * 101485)))) ** 3) - (0.5E-3 / 16))
    return c


t_v = np.array([21.36, 17.35, 17.64, 17.73, 19.03, 14.93, 14.21, 14.87, 14.58, 14.85,
                18.10, 12.57, 15.25, 15.40, 14.91, 14.33, 14.87])
t_u = np.array([2.47, 2.97, 9.47, 8.82, 2.22, 11.87, 2.28, 1.66, 11.66, 2.01,
                1.89, 3.94, 6.93, 2.43, 9.52, 2.83, 1.63])

g.plot(r(t_v), f(t_v, t_u), 'o')

for i in range(1, 11):
    g.axhline(y=i*1.6022E-19, color='gray', linestyle='--')

print(str(f(16, 40)))
print(str(t_up(1*1.6022E-19)))

g.xlabel(r"Radius $r$ in [m]", fontsize=16)
g.ylabel(r"Ladung $q$ in [C]", fontsize=16)
g.savefig("plots/millikan.png")
g.show()
